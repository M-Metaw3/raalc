{
  "info": {
    "name": "RAALC - User Complete Flow",
    "description": "Complete user authentication and document upload flow for RAALC API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:6000/api",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "registerToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "loginToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "resetToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "otp",
      "value": "",
      "type": "string"
    },
    {
      "key": "email",
      "value": "test@example.com",
      "type": "string"
    },
    {
      "key": "phone",
      "value": "0501234567",
      "type": "string"
    },
    {
      "key": "password",
      "value": "Test@123456",
      "type": "string"
    },
    {
      "key": "documentId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Authentication Flow",
      "item": [
        {
          "name": "1.1 Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data.registerToken) {",
                  "        pm.collectionVariables.set('registerToken', jsonData.data.registerToken);",
                  "        console.log('Register Token saved:', jsonData.data.registerToken);",
                  "    }",
                  "    if (jsonData.data.otp) {",
                  "        pm.collectionVariables.set('otp', jsonData.data.otp);",
                  "        console.log('OTP (DEV MODE):', jsonData.data.otp);",
                  "    }",
                  "    pm.test('Registration successful', function () {",
                  "        pm.expect(jsonData.ok).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Ahmed Mohamed\",\n  \"email\": \"{{email}}\",\n  \"phone\": \"{{phone}}\",\n  \"password\": \"{{password}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["users", "register"]
            },
            "description": "Register a new user. OTP will be sent to phone number."
          },
          "response": []
        },
        {
          "name": "1.2 Verify OTP (Registration)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    // Check if documents required",
                  "    if (jsonData.data.requiresDocuments) {",
                  "        console.log('✅ OTP Verified - Documents Required');",
                  "        console.log('Min Documents:', jsonData.data.minDocuments);",
                  "        console.log('Max Documents:', jsonData.data.maxDocuments);",
                  "    }",
                  "    ",
                  "    // If tokens provided (documents already uploaded)",
                  "    if (jsonData.data.tokens) {",
                  "        pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
                  "        pm.collectionVariables.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "        console.log('Access Token saved');",
                  "    }",
                  "    ",
                  "    pm.test('OTP Verification successful', function () {",
                  "        pm.expect(jsonData.ok).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"registerToken\": \"{{registerToken}}\",\n  \"otp\": \"{{otp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["users", "verify-otp"]
            },
            "description": "Verify OTP after registration. Will return requiresDocuments: true"
          },
          "response": []
        },
        {
          "name": "1.3 Resend OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data.otp) {",
                  "        pm.collectionVariables.set('otp', jsonData.data.otp);",
                  "        console.log('New OTP (DEV MODE):', jsonData.data.otp);",
                  "    }",
                  "    pm.test('OTP Resent successfully', function () {",
                  "        pm.expect(jsonData.ok).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"registerToken\": \"{{registerToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/resend-otp",
              "host": ["{{baseUrl}}"],
              "path": ["users", "resend-otp"]
            },
            "description": "Resend OTP if expired or not received"
          },
          "response": []
        }
      ]
    },
    {
      "name": "2. Document Upload Flow",
      "item": [
        {
          "name": "2.1 Upload Documents (Images/PDFs)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    if (jsonData.data.documents && jsonData.data.documents.length > 0) {",
                  "        const firstDocId = jsonData.data.documents[0].id;",
                  "        pm.collectionVariables.set('documentId', firstDocId);",
                  "        console.log('Document ID saved:', firstDocId);",
                  "    }",
                  "    ",
                  "    console.log('Documents Uploaded:', jsonData.data.user.documentsCount);",
                  "    console.log('Documents Status:', jsonData.data.user.documentsUploaded);",
                  "    ",
                  "    pm.test('Documents uploaded successfully', function () {",
                  "        pm.expect(jsonData.ok).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "documents",
                  "type": "file",
                  "src": [],
                  "description": "Upload 1-5 documents (images or PDFs)"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/users/documents",
              "host": ["{{baseUrl}}"],
              "path": ["users", "documents"]
            },
            "description": "Upload required documents (Emirates ID, Passport, etc.)\n\n⚠️ IMPORTANT: You need to upload actual files here!\n- Min: 1 file\n- Max: 5 files\n- Types: JPEG, PNG, WebP, PDF\n- Max size per file: 10MB"
          },
          "response": []
        },
        {
          "name": "2.2 Get My Documents",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    console.log('Total Documents:', jsonData.data.documentsCount);",
                  "    console.log('Min Required:', jsonData.data.minRequired);",
                  "    console.log('Max Allowed:', jsonData.data.maxAllowed);",
                  "    console.log('Status:', jsonData.data.documentsUploaded);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/documents",
              "host": ["{{baseUrl}}"],
              "path": ["users", "documents"]
            },
            "description": "Get all uploaded documents for current user"
          },
          "response": []
        },
        {
          "name": "2.3 Delete Document",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    console.log('Documents Remaining:', jsonData.data.documentsCount);",
                  "    console.log('Documents Status:', jsonData.data.documentsUploaded);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/documents/{{documentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "documents", "{{documentId}}"]
            },
            "description": "Delete a specific document by ID"
          },
          "response": []
        }
      ]
    },
    {
      "name": "3. Login Flow",
      "item": [
        {
          "name": "3.1 Login with Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    // Check if OTP required (new device)",
                  "    if (jsonData.data.requiresOTP) {",
                  "        pm.collectionVariables.set('loginToken', jsonData.data.loginToken);",
                  "        if (jsonData.data.otp) {",
                  "            pm.collectionVariables.set('otp', jsonData.data.otp);",
                  "            console.log('Login OTP (DEV MODE):', jsonData.data.otp);",
                  "        }",
                  "        console.log('⚠️ OTP Required for new device');",
                  "    }",
                  "    ",
                  "    // Check if documents required",
                  "    if (jsonData.data.requiresDocuments) {",
                  "        console.log('⚠️ Documents Required');",
                  "        console.log('Min Documents:', jsonData.data.minDocuments);",
                  "        console.log('Max Documents:', jsonData.data.maxDocuments);",
                  "    }",
                  "    ",
                  "    // If tokens provided (full access)",
                  "    if (jsonData.data.tokens) {",
                  "        pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
                  "        pm.collectionVariables.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "        console.log('✅ Login Successful - Full Access');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"identifier\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"deviceId\": \"device-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["users", "login"]
            },
            "description": "Login with email. Can also use phone number as identifier."
          },
          "response": []
        },
        {
          "name": "3.2 Login with Phone",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    if (jsonData.data.requiresOTP) {",
                  "        pm.collectionVariables.set('loginToken', jsonData.data.loginToken);",
                  "        if (jsonData.data.otp) {",
                  "            pm.collectionVariables.set('otp', jsonData.data.otp);",
                  "        }",
                  "    }",
                  "    ",
                  "    if (jsonData.data.tokens) {",
                  "        pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
                  "        pm.collectionVariables.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"identifier\": \"{{phone}}\",\n  \"password\": \"{{password}}\",\n  \"deviceId\": \"device-123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["users", "login"]
            },
            "description": "Login with phone number (UAE format: 05XXXXXXXX)"
          },
          "response": []
        },
        {
          "name": "3.3 Verify Login OTP (New Device)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    if (jsonData.data.requiresDocuments) {",
                  "        console.log('⚠️ Documents Required');",
                  "    }",
                  "    ",
                  "    if (jsonData.data.tokens) {",
                  "        pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
                  "        pm.collectionVariables.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "        console.log('✅ Login Successful');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"loginToken\": \"{{loginToken}}\",\n  \"otp\": \"{{otp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/verify-login-otp",
              "host": ["{{baseUrl}}"],
              "path": ["users", "verify-login-otp"]
            },
            "description": "Verify OTP when logging in from a new device"
          },
          "response": []
        },
        {
          "name": "3.4 Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', jsonData.data.accessToken);",
                  "    console.log('✅ Token Refreshed');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/refresh-token",
              "host": ["{{baseUrl}}"],
              "path": ["users", "refresh-token"]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "4. Password Management",
      "item": [
        {
          "name": "4.1 Forgot Password (Send OTP)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data.resetToken) {",
                  "        pm.collectionVariables.set('resetToken', jsonData.data.resetToken);",
                  "        console.log('Reset Token saved');",
                  "    }",
                  "    if (jsonData.data.otp) {",
                  "        pm.collectionVariables.set('otp', jsonData.data.otp);",
                  "        console.log('Reset OTP (DEV MODE):', jsonData.data.otp);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{email}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["users", "forgot-password"]
            },
            "description": "Request password reset. OTP will be sent to registered phone number."
          },
          "response": []
        },
        {
          "name": "4.2 Reset Password with OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    console.log('✅ Password Reset Successful');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"resetToken\": \"{{resetToken}}\",\n  \"otp\": \"{{otp}}\",\n  \"newPassword\": \"NewPassword@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["users", "reset-password"]
            },
            "description": "Reset password using OTP"
          },
          "response": []
        },
        {
          "name": "4.3 Change Password (Authenticated)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('✅ Password Changed Successfully');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"{{password}}\",\n  \"newPassword\": \"NewPassword@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["users", "change-password"]
            },
            "description": "Change password while logged in"
          },
          "response": []
        }
      ]
    },
    {
      "name": "5. Profile Management",
      "item": [
        {
          "name": "5.1 Get My Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    console.log('User:', jsonData.data.fullName);",
                  "    console.log('Email:', jsonData.data.email);",
                  "    console.log('Phone:', jsonData.data.phone);",
                  "    console.log('Documents Uploaded:', jsonData.data.documentsUploaded);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["users", "me"]
            },
            "description": "Get current user profile information"
          },
          "response": []
        },
        {
          "name": "5.2 Upload Avatar",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('✅ Avatar Uploaded');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "avatar",
                  "type": "file",
                  "src": [],
                  "description": "Profile picture (max 2MB)"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/users/avatar",
              "host": ["{{baseUrl}}"],
              "path": ["users", "avatar"]
            },
            "description": "Upload or update profile picture"
          },
          "response": []
        },
        {
          "name": "5.3 Delete Avatar",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/avatar",
              "host": ["{{baseUrl}}"],
              "path": ["users", "avatar"]
            },
            "description": "Delete profile picture"
          },
          "response": []
        }
      ]
    },
    {
      "name": "6. Complete Flow Test",
      "item": [
        {
          "name": "Complete User Journey",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "",
              "host": [""]
            },
            "description": "# 🎯 Complete User Journey Test\n\n## Follow this order:\n\n### Step 1: Registration\n1. **Register User** (1.1)\n   - Copy OTP from response (DEV mode)\n   - Copy registerToken\n\n2. **Verify OTP** (1.2)\n   - Response will show: `requiresDocuments: true`\n   - No tokens yet!\n\n### Step 2: Document Upload\n3. **Upload Documents** (2.1)\n   - Upload 1-5 files\n   - documentsUploaded becomes `true`\n\n### Step 3: Login\n4. **Login** (3.1 or 3.2)\n   - Now you get tokens!\n   - Full access granted ✅\n\n### Step 4: Use Protected Routes\n5. **Get Profile** (5.1)\n6. **Upload Avatar** (5.2)\n7. **Get Documents** (2.2)\n\n---\n\n## 🔄 Alternative Flows:\n\n### Login before uploading documents:\n- Login → Response: `requiresDocuments: true`\n- Upload Documents → Login again → Get tokens\n\n### New Device Login:\n- Login with different deviceId\n- Response: `requiresOTP: true`\n- Verify Login OTP → Check documents → Get tokens\n\n### Forgot Password:\n- Forgot Password → Get OTP\n- Reset Password with OTP\n- Login with new password\n\n---\n\n## 📱 Expected Response Patterns:\n\n```json\n// After OTP Verification (No documents)\n{\n  \"ok\": true,\n  \"message\": \"Please upload required documents...\",\n  \"data\": {\n    \"requiresDocuments\": true,\n    \"user\": {...},\n    \"minDocuments\": 1,\n    \"maxDocuments\": 5\n  }\n}\n\n// After Documents Upload\n{\n  \"ok\": true,\n  \"data\": {\n    \"user\": {\n      \"documentsUploaded\": true,\n      \"documentsCount\": 2\n    }\n  }\n}\n\n// After Login (With documents)\n{\n  \"ok\": true,\n  \"data\": {\n    \"user\": {...},\n    \"tokens\": {\n      \"accessToken\": \"...\",\n      \"refreshToken\": \"...\"\n    }\n  }\n}\n```"
          },
          "response": []
        }
      ]
    }
  ]
}

